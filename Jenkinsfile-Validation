pipeline {
  agent {
    kubernetes {
      label 'jenkins-slave'
      defaultContainer 'jnlp'
      yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    some-label: some-label-value
spec:
  containers:
  - name: maven
    image: 931604932544.dkr.ecr.us-east-2.amazonaws.com/jenkins-slave:devops
    imagePullPolicy: Always
    command:
    - cat
    tty: true
    volumeMounts:
    - mountPath: /var/run/docker.sock
      name: docker-socket-volume
    securityContext:
      privileged: true
  volumes:
      - name: docker-socket-volume
        hostPath:
          path: /var/run/docker.sock
          type: File
  
"""
    }
  }
  stages
  {

  stage('jmeter Testing using maven') {
           
            steps {
            container('maven') {                
                    
                    sh 'Xvfb :0 >& /dev/null &'
                    sh' mvn jmeter:jmeter -Pjmeter'                    
                    perfReport 'target/jmeter/results/DEMO.jtl'
                    
                
            }
            }
        } 

        stage('Selenium Testing using maven') {
           
            steps {
            container('maven') {                
                    
                    sh 'Xvfb :0 >& /dev/null &..'                    
                    sh 'mvn    -Dtest=com.steerwise.sat.selenium.JMeterSeleniumDemoTest test  -Dmaven.test.failure.ignore=true'
                                      
                    
                
            }
            }
        } 

        stage('Junit Testing using maven') {
           
            steps {
            container('maven') {                
                    
                                     
                    sh 'mvn  -Dtest=com.steerwise.sat.junit.ProductIntTest test -Dmaven.test.failure.ignore=true'
                    junit 'target/surefire-reports/junitreports/*.xml'                 
                    
                
            }
            }
        } 
  
  }
}